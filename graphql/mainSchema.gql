scalar Date

type User {
    id: ID
    name: String
    lastname: String
    password: String
    school: ID
}

type School {
    id: ID
    name: String
    direction: String
    studentsQuantity: Int
    logo: String
}

type Student {
    id: ID
    name: String
    lastname: String
    admissionDate: Date
    age: Int
    averageGrade: Float
    school: ID
}

input UserInput {
    name: String!
    lastname: String!
    password: String!
    School: ID!
}

input SchoolInput {
    name: String!
    direction: String
}

input StudentInput {
    name: String!
    lastname: String!
    age: Int!
    admissionDate: Date!
    averageGrade: Float!
    direction: String
}

type Query {
    getUser(id: ID!): User
    getSchool(id: ID!): School
    getStudent(id: ID!): Student
    getAllStudents: [Student]
}

type Mutation {
    createStudent(input: StudentInput!): Student
    updateStudent(id: ID!): Student
    deleteStudent(id: ID!): Student
}

